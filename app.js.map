{"version":3,"sources":["webpack:///./src/app.js","webpack:///./src/index.js","webpack:///./src/base.js"],"names":["__webpack_require__","fakeResource","Promise","resolve","reject","setTimeout","loading","lit_extended","header","Object","until","_sideeffectedcounter","window","bootstrapApplication","async","console","log","document","body","Root","destination","customElements","define","is","bootstrap","base","[object Object]","super","this","needsRender","root","attachShadow","mode","render","attrName","oldVal","newVal","BaseConstructor","counter","_counter","v","invalidate","value1","value2","e","sideeffected_value","f","lit_html","part","freeRunCounter","freeRun_interval","setInterval","setValue","clearInterval","style","_dec","_inc","setValue1","setValue2","freeRun","app_AppConstructor","HTMLElement"],"mappings":";;;;;;IAIAA,oBAAA;IAEA,MAAAC,eAAA,IAAAC,QAAA,CAAAC,SAAAC;QACAC,WAAA,MAAAF,QAAA;QAGAG,UAAAC,aAAA,kCAGAC,SAAAD,aAAA;6BAEAE,OAAAC,MAAA,MAAAD,CACAR,cACAK;;IAIA,IAAAK,uBAAA;ICAAC,OAAAC,uBAAAC;QACAC,QAAAC,IAAA,gBAAAC,SAAAC,OCgDA,SAAAC,MAAAC;YACAC,eAAAC,OAAAH,KAAAI,IAAAJ;SDhDAK,CDUA,CAAAC,sBE/BA,CAAAA,sBACAA;YACAC;gBACAC,SACAC,KAAAC,eAAA,GACAD,KAAAE,OAAAF,KAAAG;oBAAmCC,MAAA;;;YAGnCN;gBACAE,KAAAC,gBACAD,KAAAC,eAAA,SACA,GACAD,KAAAC,eAAA,GACApB,OAAAF,aAAA,OAAAE,CAAAmB,KAAAK,UAAAL,KAAAE;;YAqBAJ;gBACA,OAAAnB,aAAA;;YAGAmB;gBACAX,QAAAC,IAAA;;YAGAU;gBACAX,QAAAC,IAAA;;YAGAU,yBAAAQ,UAAAC,QAAAC;gBACArB,QAAAC,MAAA,oBAAAkB,UAAAC,QAAAC;;UFfAC,CAAAZ;YACAF;gBACA;;YAGAe;gBAA6C,OAA5BvB,QAAAC,IAAA,gBAA4BY,KAAAW,YAAA;;YAC7CD,YAAAE;gBAAkBZ,KAAAW,WAAAC,GAAmBZ,KAAAa;;YAErCf;gBACAC,SACAC,KAAAc,SAAA,UACAd,KAAAe,SAAA,UACAf,KAAAjB,uBAAA;gBACAiB,KAAAU,UAAA;;YAGAZ,KAAAkB;gBACA7B,QAAAC,IAAA,WAAA4B,IACAhB,KAAAU;;YAGAZ,KAAAkB;gBACA7B,QAAAC,IAAA,WAAA4B,IACAhB,KAAAU;;YAGAZ,UAAAkB;gBACAhB,KAAAc,SAAA,WACAd,KAAAa;;YAGAf,UAAAkB;gBACAhB,KAAAe,SAAA;;YAIAE;gBAEA,OADAjB,KAAAjB,uBAAAiB,KAAAjB,uBAAA,GACA,WAAAiB,KAAAjB;;YAGAe,QAAAoB;gBACA,OAAArC,OAAAsC,SAAA,UAAAtC,CAAAuC,SAEA,sBAAApB,SACAA,KAAAqB,iBAAA;gBACArB,KAAAsB,mBAAAC,YAAA;oBAEAvB,KAAAqB,iBAAArB,KAAAqB,iBAAA,GACAD,KAAAI,SAAAxB,KAAAqB;mBACS,OAGTrB,KAAAqB;;YAMAvB;gBACAX,QAAAC,IAAA,qBACAqC,cAAAzB,KAAAsB;;YAIAI;gBACA,OAAA/C,aAAA;;;;;;;;;YAUAmB;gBACA,OAAAnB,aAAA;QACQqB,KAAA0B;QACA9C;;4BAEoBoC,KAAAhB,KAAA2B,KAAAX;gBACZhB,KAAAU;4BACYM,KAAAhB,KAAA4B,KAAAZ;;;4BAGAA,KAAAhB,KAAA6B,UAAAb;iBACXhB,KAAAc;;;4BAGWE,KAAAhB,KAAA8B,UAAAd;iBACXhB,KAAAe;;;wBAGOf,KAAAiB,wBAxGxB,aADAlC,wBAAA;;;4BA4G4BiB,KAAA+B,QAAA;;;;UC5G5BC,CAAAC,cAAA5C,SAAAC","file":"./app.js","sourcesContent":["import { html } from 'lit-html/lib/lit-extended';\r\nimport { directive } from 'lit-html';\r\nimport { until } from 'lit-html/lib/until';\r\nimport { BaseConstructor } from './base';\r\nrequire('./app.css');\r\n\r\nconst fakeResource = new Promise((resolve, reject) => {\r\n  setTimeout(() => resolve(\"[some useful data]\"), 5000);\r\n});\r\n\r\nconst loading = html`<span>Loading...</span>`;\r\n\r\nconst title = 'title';\r\nconst header = html`\r\n  <h3> Fake slow resourse: ${\r\n    until(\r\n      fakeResource,\r\n      loading\r\n    )}</h1>\r\n`;\r\n\r\nlet _sideeffectedcounter = 0;\r\nconst sideeffected_value = function() {\r\n  _sideeffectedcounter = _sideeffectedcounter + 1;\r\n  return \"global_\" + _sideeffectedcounter;\r\n};\r\n\r\n// const inc1 = (promise, content) =>\r\n//   directive((part) => {\r\n//     part.setValue(content);\r\n//     return promise;\r\n//   });\r\n\r\nexport const AppConstructor = (base) =>\r\nclass App extends BaseConstructor(base) {\r\n  static get is() {\r\n    return 'lit-app';\r\n  }\r\n      \r\n  get counter() { console.log(\"get counter\"); return this._counter || 0;}\r\n  set counter(v) { this._counter = v; this.invalidate(); }\r\n  \r\n  constructor() {\r\n    super();\r\n    this.value1 = 'value1';\r\n    this.value2 = 'value2';\r\n    this._sideeffectedcounter = 0;\r\n    this.counter = 0; // Will call this.invalidate() and render element\r\n  }\r\n  \r\n  _inc(e) {\r\n    console.log('App:inc', e);\r\n    this.counter++; // Will call this.invalidate() and render element\r\n  }\r\n\r\n  _dec(e) {\r\n    console.log('App:dec', e);\r\n    this.counter--; // Will call this.invalidate() and render element\r\n  }\r\n  \r\n  setValue1(e) {\r\n    this.value1 = 'changed';\r\n    this.invalidate();  // Call render\r\n  }\r\n\r\n  setValue2(e) {\r\n    this.value2 = 'changed';\r\n    // No call render\r\n  }\r\n\r\n  get sideeffected_value() {\r\n    this._sideeffectedcounter = this._sideeffectedcounter + 1;\r\n    return \"local_\" + this._sideeffectedcounter;\r\n  }\r\n\r\n  freeRun(f) {\r\n    return directive((part) => {\r\n      // console.log([\"freeRun\", f, part, part.previousValue]);\r\n      if(!('freeRun_interval' in this)) {\r\n        this.freeRunCounter = 0;\r\n        this.freeRun_interval = setInterval(() => {\r\n          // console.log([\"freeRun_interval\", f, part, part.previousValue]);\r\n          this.freeRunCounter = this.freeRunCounter + 1;\r\n          part.setValue(this.freeRunCounter);\r\n        }, 1000);\r\n      }\r\n      // return html`<div>freRun: ${this.freeRunCounter}</div>`;\r\n      return this.freeRunCounter;\r\n    });\r\n  }\r\n\r\n  // TODO: Not worked with polyfills???\r\n  // To bad.\r\n  disconnectedCallback() {\r\n    console.log(\"Stoping interval\");\r\n    clearInterval(this.freeRun_interval);\r\n  }\r\n\r\n  // TODO: Test isolated styles\r\n  get style() {\r\n    return html`\r\n      <link rel=\"stylesheet\" href=\"./app.css\">\r\n      <style>\r\n        button {\r\n          /*background-color: green;*/\r\n        }\r\n      </style>\r\n    `;\r\n  }\r\n  \r\n  render() {\r\n    return html`\r\n      ${this.style}\r\n      ${header}\r\n      <div class=\"content\">\r\n        <button on-click=\"${e => this._dec(e)}\">-</button>\r\n        <span>${this.counter}</span>\r\n        <button on-click=\"${e => this._inc(e)}\">+</button>\r\n      </div>\r\n      <div>\r\n        <button on-click=\"${e => this.setValue1(e)}\">Change me with invalidate</button>\r\n        Value: ${this.value1}\r\n      </div>\r\n      <div>\r\n        <button on-click=\"${e => this.setValue2(e)}\">Change me without invalidate</button>\r\n        Value: ${this.value2}\r\n      </div>\r\n      <div>\r\n        Side effects: ${this.sideeffected_value} / ${sideeffected_value()}\r\n      </div>\r\n      <div>\r\n        free run counter: ${this.freeRun('what?')}\r\n      </div>\r\n    `;\r\n  }\r\n};\r\n\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app.js\n// module id = null\n// module chunks = ","import { AppConstructor } from './app.js';\r\nimport { bootstrap } from './base';\r\n\r\n// if(!('customElements' in window)) {\r\n//   const loader = require('@webcomponents/webcomponentsjs!');\r\n//   console.log('on demand loader', loader);\r\n// }\r\n// window.bootstrapApplication = async function () {\r\n//   const promises = [];\r\n//   if (!('customElements' in window)) {\r\n//     // promises.push(System.import('@webcomponents/custom-elements/custom-elements.min.js'));\r\n//     promises.push(System.import('@webcomponents/webcomponentsjs/webcomponents-lite.js'));\r\n//   } else {\r\n//     promises.push(System.import('@webcomponents/webcomponentsjs/custom-elements-es5-adapter.js'));\r\n//   }\r\n//   console.log('promises =', promises);\r\n//   // await Promise.all(promises);\r\n// }\r\n\r\n// bootstrapApplication();\r\n\r\nwindow.bootstrapApplication = async function () {\r\n  console.log(\"bootstraping\", document.body);\r\n  bootstrap(AppConstructor(HTMLElement), document.body);\r\n}\r\n\r\n// const app = new App(document.body);\r\n// const app = new App();\r\n\r\n\r\n\r\n// document.body.app\r\n\r\n// window.addEventListener('touchend', function (e) {\r\n//     console.log(e);\r\n//     e.preventDefault();\r\n//     var event = new Event('click');\r\n//     e.target.dispatchEvent(event);\r\n// });\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/index.js\n// module id = null\n// module chunks = ","import { html, render } from 'lit-html/lib/lit-extended';\n\nexport const BaseConstructor = (base) =>\nclass Base extends base {\n  constructor() {\n    super();\n    this.needsRender = false;\n    this.root = this.attachShadow({mode: 'open'});\n  }\n\n  async invalidate() {\n    if (!this.needsRender) {\n      this.needsRender = true;\n      await 0;\n      this.needsRender = false;\n      render(this.render(), this.root);\n    }\n  }\n          \n  // invalidate() {\n  //   // Not sure for reason. One line works fine too.\n  //   // render(this.render(), this.parent);\n  //   if (!this.needsRender) {\n  //     this.needsRender = true;\n  //     Promise.resolve().then(() => {\n  //       this.needsRender = false;\n  //       if(ng) {\n  //         render(this.render(), this.shadowRoot);\n  //       } else {\n  //         console.log([\"TBD\", this]);\n  //         render(this.render(), this.parent);\n  //       }\n  //     });\n  //   }\n  // }\n  \n  render() {\n    return html``;\n  }    \n\n  connectedCallback() {\n    console.log('connected');\n  }\n\n  disconnectedCallback() {\n    console.log('disconnected');\n  }\n\n  attributeChangedCallback(attrName, oldVal, newVal) {\n    console.log(['attributeChanged', attrName, oldVal, newVal]);\n  }\n\n};\n\n\nconst AppConstructor = (base) => \n  class App1 extends base {\n    constructor() {\n      super();\n    }\n    connectedCallback() {\n      console.log('connected');\n    }\n    disconnectedCallback() {\n    }\n    attributeChangedCallback(attrName, oldVal, newVal) {\n    }\n  };\n\n\nexport function bootstrap(Root, destination) {\n  customElements.define(Root.is, Root);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/base.js\n// module id = null\n// module chunks = "],"sourceRoot":""}